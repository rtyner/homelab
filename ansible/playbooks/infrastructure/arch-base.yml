- hosts: all
  become: true
  vars:
    ansible_os_family: "Archlinux"
  
  vars:
    tailscale_authkey: "{{ lookup('env', 'TAILSCALE_KEY') }}"
    local_user: "rt"
    local_pw: "{{ lookup('env', 'LOCAL_PW') }}"
    share_uri: "//10.1.1.8/shares"
    share_mountpoint: "/home/rt/mount/shares"
    mount_username: "rt"
    mount_password: "{{ lookup('env', 'MOUNT_PW') }}"
  
  tasks:
    - name: set authorized keys from file
      ansible.posix.authorized_key:
        user: rt
        state: present
        key: "{{ lookup('file', '~/.ssh/id_ed25519.pub') }}"

    - name: Nopasswd sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        backup: yes
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
  
    - name: disable root login
      lineinfile:
          path: /etc/ssh/sshd_config
          state: present
          backup: yes        
          regexp: '^PermitRootLogin'
          line: "PermitRootLogin no"
  
    - name: Update pacman cache
      connection: local
      community.general.pacman:
        update_cache: yes
  
    - name: Upgrade all packages
      community.general.pacman:
        upgrade: yes        
  
    - name: install packages
      community.general.pacman:
        name: "{{packages}}"
        state: present

      vars:
        packages:
          # Base utilities
          - vim
          - curl
          - wget
          - htop 
          - gnupg
          - git 
          - unzip
          - rsync
          - bind-tools
          - nfs-utils
          - cifs-utils
          
          # Programming languages and development tools
          - python
          - python-pip
          - base-devel
          - python-setuptools
          - sqlite
          - postgresql
          - rust
          - go
          - docker
          - docker-compose
          - kubectl
          - k9s
          
          # Shell and terminal utilities
          - zsh
          - zsh-syntax-highlighting
          - tmux
          - fzf
          - ripgrep
          - fd
          - bat
          - tree
          - ncdu
          
          # Text processing and version control
          - jq
          - yq
          - diff-so-fancy
          - lazygit
          - meld
          - ctags
          - shellcheck
          
          # Network tools
          - nmap
          - tcpdump
          - mtr
          - iperf
          - wireshark-cli
          - netcat
          - socat
          - sshfs
          - openssh
          - openvpn
          
          # System monitoring and debugging
          - sysstat
          - iotop
          - atop
          - strace
          - lsof
          - perf
          
          # File management and utilities
          - ranger
          - rclone
          - neofetch
          - neovim
  
    - name: download bashrc
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/rtyner/homelab/refs/heads/main/configs/.bashrc
        dest: /home/rt/.bashrc
 
    - name: create working dir
      ansible.builtin.file:
        path: /home/rt/working
        state: directory
        owner: rt 
        group: rt
        mode: '0755'

    - name: create mount
      ansible.builtin.file:
        path: /home/rt/mount
        state: directory
        owner: rt 
        group: rt
        mode: '0755'
 
    - name: create mount/shares
      ansible.builtin.file:
       path: /home/rt/mount/shares
       state: directory
       owner: rt 
       group: rt
       mode: '0755'

    - name: ensure cifs-utils is installed
      community.general.pacman:
        name: cifs-utils
        state: present

    - name: check shares mount exists
      ansible.builtin.file:
        path: "{{ share_uri }}"
        state: directory
        mode: '0755'
        owner: rt
        group: rt
 
    - name: mount shares
      ansible.posix.mount:
        src: "{{ share_uri }}"
        path: "{{ shares_mountpoint }}"
        fstype: cifs
        opts: 'username={{ mount_username }},password={{ mount_password }},user,nofail'
        state: mounted